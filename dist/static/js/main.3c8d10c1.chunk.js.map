{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/NavBar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","catch","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","concat","id","key","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","ownProps","match","params","data","currProject","content","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","response","doc","user","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_NavBar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","console","log","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3c8d10c1.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\n            <li><button onClick={props.signOut}>Log Out</button></li>\n            <li>\n                <NavLink to=\"/\" className=\"btn btn-floating pink darken-1\">\n                    {props.profile.initials}\n                </NavLink>\n            </li>\n        </ul>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut()),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password,\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS'});\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err });\n        });\n    };\n};\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut()\n        .then(() => {\n            dispatch({ type: 'SIGNOUT'});\n        })\n        .catch();\n    };\n};\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password,\n        ).then((response) => {\n            return firestore.collection('users').doc(response.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0],\n            });\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS'});\n        }).catch((err) => {\n            dispatch({ type: 'SIGNUP_ERROR', err });\n        });\n    };\n};","import React from 'react';\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\n            <li><NavLink to=\"/signin\">Log In</NavLink></li>\n        </ul>\n    );\n};\n\nexport default SignedOutLinks;","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst NavBar = (props) => {\n    const { auth, profile } = props;\n    const links = auth.uid\n        ? <SignedInLinks profile={profile} />\n        : <SignedOutLinks />;\n\n    return (\n        <nav className=\"nav-wrapper blue\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo left\">Project Planner</Link>\n                { links }\n            </div>\n        </nav>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile,\n    };\n};\n\nexport default connect(mapStateToProps)(NavBar);","import React from 'react'\n\nconst Notifications = () => {\n    return (\n        <div>\n            <p>Notification</p>\n        </div>\n    );\n};\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ({ project }) => {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default ProjectSummary;","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({ projects }) => {\n    return (\n        <div className=\"project-list section\">\n            {projects && projects.map(project => (\n                <Link to={`/project/${project.id}`} key={project.id}>\n                    <ProjectSummary project={project} />\n                </Link>\n                ))}\n        </div>\n    );\n};\n\nexport default ProjectList;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component {\n    render() {\n        const { projects, auth } = this.props;\n        if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects} />\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        // now that we connect to firebase, we pass all projects in DB as this.props.projects\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects' }, // sync projects collection from Firestore into redux\n    ]),\n)(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n    const { currProject, auth } = props;\n\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n    if (currProject) {\n        return (\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">{currProject.title}</span>\n                        <p>{currProject.content}</p>\n                    </div>\n                    <div className=\"card-action lighten-4 grey-text\">\n                        <div>Posted by {currProject.authorFirstName} {currProject.authorLastName}</div>\n                        <div>{moment(currProject.createdAt.toDate()).calendar()}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"container center\">\n                <p>Loading project...</p>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null;\n    return {\n        currProject: project,\n        auth: state.firebase.auth,\n    };\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects' },\n    ]),\n)(ProjectDetails);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: '',\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value,\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n    render() {\n        const { authError, auth } = this.props;\n        if (auth.uid) return <Redirect to=\"/\" />;\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{authError}</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { signUp } from '../../store/actions/authActions';\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: '',\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value,\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state);\n    }\n    render() {\n        const { auth, authError } = this.props;\n        if (auth.uid) return <Redirect to=\"/\" />;\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/projectActions';\nimport { Redirect } from 'react-router-dom';\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: '',\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value,\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createProject(this.state);\n        this.props.history.push('/'); // redirecting to home page after submit new project\n    }\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Content</label>\n                        <textarea\n                            className=\"materialize-textarea\"\n                            id=\"content\"\n                            onChange={this.handleChange}>\n                        </textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        // make async call to database\n\n        const firestore = getFirestore(); // connect to firebase storage\n\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n\n        // link to 'projects' collection in firebase database and add new project\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date(),\n        }).then(() => { // after adding new info to DB, we invoke the dispatch fn\n            dispatch({ type: 'CREATE_PROJECT', project });\n        }).catch((err) => {\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err });\n        });\n    };\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport NavBar from './components/layout/NavBar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null,\n};\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            return {\n                ...state,\n                authError: 'Login failed',\n            };\n        case 'LOGIN_SUCCESS':\n            return {\n                ...state,\n                authError: null,\n            };\n        case 'SIGNOUT':\n            return state;\n        case 'SIGNUP_SUCCESS':\n            return {\n                ...state,\n                authError: null,\n            };\n        case 'SIGNUP_ERROR':\n            return {\n                ...state,\n                authError: action.err.message,\n            };\n        default:\n            return state;\n    }\n}\n\nexport default authReducer;","const initState = {\n    projects: [\n        {id: 1, title: \"Google Map Recommendation\", content: \"blah blah blah\"},\n        {id: 2, title: \"Project Management Planner\", content: \"blah blah blah\"},\n        {id: 3, title: \"Profile Page\", content: \"blah blah blah\"},\n        {id: 4, title: \"Using MongoDB for Data Storage\", content: \"blah blah blah\"},\n        {id: 5, title: \"Animal Trading Card\", content: \"blah blah blah\"},\n    ],\n};\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('there is an error while creating project: ', action.err)\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default projectReducer;","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer,\n});\n\nexport default rootReducer;","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyAEtwMnBY1OUrlcORfTQhuCjVGuSndODcE\",\n    authDomain: \"sp-project-planner.firebaseapp.com\",\n    databaseURL: \"https://sp-project-planner.firebaseio.com\",\n    projectId: \"sp-project-planner\",\n    storageBucket: \"\",\n    messagingSenderId: \"661140161920\"\n};\nfirebase.initializeApp(config);\n// firebase.firestore().settings({ timestampsInSnapshots: true }); // default setting already\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer, \n    // compose multiple store enhancers together\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {\n            useFirestoreForProfile: true,\n            userProfile: 'users',\n            attachAuthIsReady: true\n        }),\n    ),\n);\n\n// wait until auth is ready to render the components\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}